#!/usr/bin/env php
<?php declare(strict_types=1);

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Workbunny\PhpOrc\Commands\PhpyInstall;
use Workbunny\PhpOrc\Commands\PyORCInstall;
use Workbunny\PhpOrc\Commands\PythonInstall;

require_once ($GLOBALS['_composer_autoload_path'] ?? dirname(__DIR__) . '/vendor/autoload.php');

$application = new class extends Application
{
    const VERSION = 'v0.1.3';

    /**
     * @param InputInterface $input
     * @param OutputInterface $output
     * @return int
     * @throws Throwable
     */
    public function doRun(InputInterface $input, OutputInterface $output): int
    {
        $this->setName(<<<doc
                      __   __
 _      ______  _____/ /__/ /_  __  ______  ____  __  __
| | /| / / __ \/ ___/ //_/ __ \/ / / / __ \/ __ \/ / / /
| |/ |/ / /_/ / /  / ,< / /_/ / /_/ / / / / / / / /_/ /  <comment>/</comment>
|__/|__/\____/_/  /_/|_/_.___/\__,_/_/ /_/_/ /_/\__, /  <comment>/</comment> php-orc
                                               /____/  <comment>/</comment> 
doc
        );
        $this->setVersion(self::VERSION);
        return parent::doRun($input, $output);
    }
};


$application->addCommands([
    new PyORCInstall(),
    new PhpyInstall(),
    new PythonInstall(),
]);
try {
    $application->run();
} catch (Throwable $e) {
    exit($e->getMessage() . PHP_EOL);
}
